#!/usr/sbin/nft -f
# vi: ft=nftables
# /etc/nftables/main.nft

flush ruleset


table inet main {
    # dn42 WireGuard listening ports
    set dn42_wg_ports {
        type inet_service
        elements = {
            24300,
            24301,
            24202,
            24204,
            24211,
            24205,
            24206,
            24207,
            24208,
            24209,
            24213,
            24210,
            24211,
            24214,
            24215,
            24216,
            24212,
            24239,
            # __MAKE_PEERING_PORT_MARKER Do not remove this comment
        }
    }
    # dn42 assigned addresses
    define dn42_self_ipv4 = 172.23.6.161
    define dn42_self_ipv6 = fdc0:d227:306:ee01::1
    # dn42 services on this host
    set dn42_ports {
        type inet_proto . inet_service
        elements = {
            tcp . domain,
            udp . domain,
            tcp . http,
            tcp . https,
            udp . https,
            udp . ntp,
            tcp . 8082, # StayRTR dn42
            tcp . 8282, # StayRTR inet
        }
    }

    # Public interface
    set public_interfaces {
        type ifname
        elements = { "enp0s3" }
    }

    # 44Net interfaces
    set ampr_interfaces {
        type ifname
        elements = { "tunl0" }
    }

    include "/etc/nftables/blacklist.nft"
    include "/etc/nftables/oracle.nft"
    include "/etc/nftables/dn42-chains.nft"
    include "/etc/nftables/ampr-chains.nft"
    include "/etc/nftables/shared-chains.nft"
    include "/etc/nftables/public-chains.nft"

    chain forward_machdep {
        # Accept all traffic within the dn42 network
        iifgroup { $dn42_ifgroup, $internal_ifgroup } oifgroup { $dn42_ifgroup, $internal_ifgroup } counter name dn42_fwd_packets accept
        # Allow our traffic to access 44Net
        iifgroup { $dn42_ifgroup, $internal_ifgroup } ip saddr $dn42_self_ipv4_prefix oifname @ampr_interfaces counter accept
        iifgroup { $dn42_ifgroup, $internal_ifgroup } ip saddr $ampr_self_prefix oifname @ampr_interfaces counter accept
        # AS211585
        iifgroup { 211585, $internal_ifgroup } ip6 daddr { 2a0b:4b81:1003::/48, 2a0b:4b81:1008::/48 } counter accept
        oifgroup { 211585, $internal_ifgroup } ip6 saddr { 2a0b:4b81:1003::/48, 2a0b:4b81:1008::/48 } counter accept
        # Allow 44Net to access our services
        iifname @ampr_interfaces oifgroup { $dn42_ifgroup, $internal_ifgroup } ip daddr $ampr_self_prefix counter accept
        # likely not needed, but just in case
        iifname @ampr_interfaces oifname @ampr_interfaces counter accept
    }

    # Bare Metal Instance Services (at iptables (higher) priority)
    chain oci_filter_output {
        type filter hook output priority filter; policy accept;
        ip daddr 169.254.0.0/16 oifname @public_interfaces counter jump BareMetalInstanceServices
        ip6 daddr fd00:c1::a9fe:0/120 oifname @public_interfaces counter jump BareMetalInstanceServices
    }

    chain nat_post {
        type nat hook postrouting priority srcnat + 10; policy accept;
        oifname @public_interfaces goto nat_post_public
        oifgroup { $dn42_ifgroup, $internal_ifgroup } goto nat_post_dn42
        oifname @ampr_interfaces goto nat_post_ampr
        goto nat_post_public
    }

    chain input {
        type filter hook input priority filter + 10; policy drop;
        meta l4proto { icmp, ipv6-icmp } limit rate 100/second accept
        ct state { established, related } accept
        ct status dnat accept
        iifname "lo" accept
        ct state invalid log prefix "input_STATE_INVALID_DROP: " drop
        iifname @public_interfaces jump input_public
        iifgroup 211585 jump input_public
        iifgroup { $dn42_ifgroup, $internal_ifgroup } jump input_dn42
        iifname @ampr_interfaces jump input_ampr
        jump input_public
        # Should have reached a decision by now
        log prefix "input_FINAL_REJECT: " counter reject with icmpx admin-prohibited
    }
}
